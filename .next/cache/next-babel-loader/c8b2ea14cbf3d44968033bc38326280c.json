{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout.js';\nimport fetch from 'isomorphic-unfetch';\nimport clientConfig from '../clientConfig';\nimport customeStyle from '../css/customStyle.module.css';\n\nvar Index = function Index(props) {\n  console.log(props.products);\n  return __jsx(Layout, null, __jsx(\"ul\", null, __jsx(\"p\", null, \"All Products\"), props.products.map(function (product) {\n    return __jsx(\"li\", {\n      key: product.name\n    }, \"Product Name: \", product.name, \" \");\n  })), __jsx(\"div\", {\n    className: \"customStyle.card\"\n  }, \"i am a card\"));\n};\n\nIndex.getInitialProps = function _callee() {\n  var result, prodData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(clientConfig.siteURL, \"/products\")));\n\n        case 2:\n          result = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(result.json());\n\n        case 5:\n          prodData = _context.sent;\n          console.log(prodData);\n          return _context.abrupt(\"return\", {\n            products: prodData\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n/*  export async function getStaticProps() {\r\n    // Call an external API endpoint to get posts\r\n    const res = await fetch(`${clientConfig.siteURL}/products`)\r\n    const products = await res.json()\r\n    console.log(res);\r\n    return {\r\n      props: {\r\n        products,\r\n      },\r\n    }\r\n  }\r\n */\n\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/bpsin/OneDrive/Escritorio/ReactProject/next-react-woo/pages/index.js"],"names":["Layout","fetch","clientConfig","customeStyle","Index","props","console","log","products","map","product","name","getInitialProps","siteURL","result","json","prodData"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACA,SACI,MAAC,MAAD,QACI,kBACI,gCADJ,EAGKH,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAoB,UAAAC,OAAO,EAAI;AAC5B,WAAO;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC;AAAjB,yBAAsCD,OAAO,CAACC,IAA9C,MAAP;AACH,GAFA,CAHL,CADJ,EASI;AAAK,IAAA,SAAS,EAAC;AAAf,mBATJ,CADJ;AAeH,CAjBD;;AAmBCP,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACAX,KAAK,WAAIC,YAAY,CAACW,OAAjB,eADL;;AAAA;AACfC,UAAAA,MADe;AAAA;AAAA,2CAEEA,MAAM,CAACC,IAAP,EAFF;;AAAA;AAEfC,UAAAA,QAFe;AAGrBV,UAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AAHqB,2CAId;AACHR,YAAAA,QAAQ,EAAEQ;AADP,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASD;;;;;;;;;;;;;;AAYA,eAAeZ,KAAf","sourcesContent":["import Layout from '../components/Layout.js';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport clientConfig from '../clientConfig';\r\n\r\nimport customeStyle from '../css/customStyle.module.css';\r\n\r\nconst Index = (props) => {\r\n    console.log(props.products)\r\n    return(\r\n        <Layout>\r\n            <ul>\r\n                <p>All Products</p>\r\n\r\n                {props.products.map( product => {\r\n                    return <li key={product.name}>Product Name: {product.name} </li>\r\n                })}\r\n            </ul>\r\n\r\n            <div className=\"customStyle.card\">\r\n                i am a card\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\n Index.getInitialProps = async () => {\r\n    const result = await fetch(`${clientConfig.siteURL}/products`);\r\n    const prodData = await result.json();\r\n    console.log(prodData);\r\n    return {\r\n        products: prodData\r\n    }\r\n }\r\n\r\n/*  export async function getStaticProps() {\r\n    // Call an external API endpoint to get posts\r\n    const res = await fetch(`${clientConfig.siteURL}/products`)\r\n    const products = await res.json()\r\n    console.log(res);\r\n    return {\r\n      props: {\r\n        products,\r\n      },\r\n    }\r\n  }\r\n */\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}